{"version":3,"sources":["js/apis/posts.js","js/actions/index.js","js/components/PostsList.js","js/actions/types.js","js/components/PostNew.js","js/components/PostsShow.js","js/components/App.js","js/reducers/index.js","js/reducers/reducerPost.js","index.js"],"names":["axios","create","baseURL","API_KEY","PostList","renderPosts","_","map","_this","props","posts","post","react_default","a","createElement","react_router_dom","key","id","className","to","concat","title","this","fetchPosts","Fragment","React","Component","connect","state","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","get","sent","type","payload","data","stop","_x","apply","arguments","FIELDS","categories","content","PostNew","renderField","input","label","meta","touched","error","assign","autoComplete","rows","onSubmit","values","createPost","then","history","push","handleSubmit","Field","name","component","reduxForm","validate","errors","each","field","form","_ref2","_callee2","_context2","_x2","PostsShow","onDeleteClick","match","params","deletePost","renderPost","onClick","fetchPost","ownProps","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","delete","_x4","App","basename","process","react_router","path","exact","combineReducers","length","undefined","action","objectSpread","defineProperty","mapKeys","omit","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","js_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.dec81532.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://reduxblog.herokuapp.com/api'\n})","import posts from '../apis/posts'\nimport {CREATE_POST, FETCH_POSTS, FETCH_POST} from \"./types\";\n\nconst API_KEY = '?key=HOUSTONWEGOTAPROBLEM12345';\n\nexport const fetchPosts = () => async (dispatch) => {\n  const response = await posts.get(`/posts${API_KEY}`);\n\n  dispatch({\n    type: FETCH_POSTS,\n    payload: response.data\n  });\n\n};\n\nexport const createPost = (values) => async (dispatch) => {\n  const response = await posts.post(`/posts${API_KEY}`, values);\n\n  dispatch({\n    type: CREATE_POST,\n    payload: response.data\n  });\n};\n\nexport const fetchPost = (id) => async (dispatch) => {\n  const response = await posts.get(`/posts/${id}${API_KEY}`);\n\n  dispatch({\n    type: FETCH_POST,\n    payload: response.data\n  })\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  const response = await posts.delete(`/posts/${id}${API_KEY}`);\n\n  dispatch({\n    type: FETCH_POST,\n    payload: response.data\n  });\n};","import _ from 'lodash'\nimport React from 'react';\nimport '../../style/components/App.css';\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {fetchPosts} from \"../actions\";\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPosts()\n  }\n\n  renderPosts = () => {\n    return _.map(this.props.posts, post => {\n      return (\n        <Link key={post.id} className=\"list-group-item custom\" to={`/posts/${post.id}`}>\n          <li>\n            {post.title}\n          </li>\n        </Link>\n      )\n    })\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"row justify-content-between p-3\">\n          <h3>Posts List</h3>\n          <Link to={'/posts/new'} className=\"btn btn-primary\">\n            Add a Post\n          </Link>\n        </div>\n        <ul className=\"list-group\">\n          {this.renderPosts()}\n        </ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {posts: state.posts}\n};\n\nexport default connect(mapStateToProps, {fetchPosts})(PostList);\n\n\n","export const FETCH_POSTS = 'FETCH_POSTS';\nexport const CREATE_POST = 'CREATE_POST';\nexport const FETCH_POST = 'FETCH_POST';\nexport const DELETE_POST = 'DELETE_POST';","import _ from 'lodash'\nimport React from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {createPost} from \"../actions\";\n\nconst FIELDS = {\n  title: {},\n  categories: {},\n  content: {},\n};\n\nclass PostNew extends React.Component {\n  renderField = ({input, label, meta}) => {\n    const {touched, error} = meta;\n    const className = `form-control ${touched && error ? 'is-invalid' : ''}`;\n\n    return (\n      <div className=\"form-group\">\n        <label>{label}</label>\n        {label !== 'Content'\n          ? <input className={className} {...input} autoComplete={'off'}/>\n          : <textarea {...input} className={className} rows=\"5\"/>\n        }\n        {touched && error\n          ? <small className=\"text-danger\">{error}</small>\n          : null\n        }\n      </div>\n    )\n  };\n\n  onSubmit = (values) => {\n    this.props.createPost(values).then(() => {\n      this.props.history.push('/')\n    })\n  };\n\n  render() {\n    return (\n      <div>\n        <h3 className=\"py-3 m-0\">Create Post</h3>\n        <div className=\"card p-4\">\n          <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n            <Field label=\"Title\" name=\"title\" component={this.renderField}/>\n            <Field label=\"Category\" name=\"categories\" component={this.renderField}/>\n            <Field label=\"Content\" name=\"content\" component={this.renderField}/>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            <Link className=\"btn btn-danger ml-3\" to={'/'}>Cancel</Link>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst validate = (values) => {\n  const errors = {};\n  _.each(FIELDS, (type, field) => {\n    if (!values[field]) {\n      errors[field] = `Enter any ${field}`\n    }\n  });\n  return errors;\n};\n\nexport default reduxForm({\n  validate,\n  form: 'PostNewForm'\n})(\n  connect(null, {createPost})(PostNew)\n);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {fetchPost, deletePost} from \"../actions\";\nimport {Link} from \"react-router-dom\";\n\nclass PostsShow extends React.Component {\n  componentDidMount() {\n    if (!this.props.post) {\n      const {id} = this.props.match.params;\n      this.props.fetchPost(id);\n    }\n  }\n\n  onDeleteClick = () => {\n    const {id} = this.props.match.params;\n    this.props.deletePost(id).then(() => {\n      this.props.history.push('/')\n    })\n  };\n\n  renderPost = ({title, categories, content}) => {\n    return (\n      <div className=\"card mt-3\">\n        <div className=\"card-header text-center\">\n          <h3 className=\"m-0\">{title}</h3>\n        </div>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{content}</p>\n        </div>\n        <div className=\"card-footer text-muted d-flex justify-content-between align-items-center\">\n          <div><span className=\"span-text-custom\">Category:</span> {categories}</div>\n          <button onClick={this.onDeleteClick} className=\"btn btn-danger\">Delete</button>\n        </div>\n      </div>\n    )\n  };\n\n  render() {\n    const arrow = '<---';\n    if (!this.props.post) {\n      return (\n        <div className=\"d-flex justify-content-center align-items-center h-100\">\n          <div className=\"loader\"/>\n        </div>\n      )\n    }\n    return (\n      <div className=\"pt-3\">\n        <div>\n          <Link className=\"arrow-back-main py-2\" to={'/'}><span className=\"arrow-back\">{arrow}</span>Back to list </Link>\n        </div>\n        {this.renderPost(this.props.post)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({posts}, ownProps) => {\n  return {post: posts[ownProps.match.params.id]}\n};\n\nexport default connect(mapStateToProps, {fetchPost, deletePost})(PostsShow);","import React from 'react';\nimport '../../style/components/App.css';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport PostList from \"./PostsList\";\nimport PostNew from \"./PostNew\";\nimport PostsShow from \"./PostsShow\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path={'/'} exact component={PostList}/>\n          <Route path={'/posts/new'} exact component={PostNew}/>\n          <Route path={'/posts/:id'} exact component={PostsShow}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport {reducer as formReducer} from 'redux-form'\nimport PostReducer from './reducerPost';\n\nexport default combineReducers({\n  posts: PostReducer,\n  form: formReducer,\n});\n","import _ from 'lodash'\nimport {FETCH_POSTS, CREATE_POST, FETCH_POST, DELETE_POST} from \"../actions/types\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_POST:\n      return {...state, [action.payload.id]: action.payload};\n    case FETCH_POSTS:\n      return _.mapKeys(action.payload, 'id');\n    case CREATE_POST:\n      return {...state, [action.payload.id]: action.payload};\n    case DELETE_POST:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./js/components/App\";\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './js/reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}